$date
	Mon Oct 12 15:41:41 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testAlu $end
$var wire 1 ! carryout $end
$var wire 1 " overflow $end
$var wire 32 # result [31:0] $end
$var wire 1 $ zero $end
$var reg 3 % command [2:0] $end
$var reg 32 & operandA [31:0] $end
$var reg 32 ' operandB [31:0] $end
$scope module alu $end
$var wire 1 ! carryout $end
$var wire 3 ( command [2:0] $end
$var wire 1 ) initialSltAnsIn $end
$var wire 1 * initialSltKin $end
$var wire 32 + operandA [31:0] $end
$var wire 32 , operandB [31:0] $end
$var wire 1 " overflow $end
$var wire 32 - result [31:0] $end
$var wire 1 $ zero $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz -
bx ,
bx +
x*
x)
bx (
bx '
bx &
bx %
z$
bz #
z"
z!
$end
#100
